<project name="br.maplink.webservices.places.client" basedir=".">

	<property file="build.properties" />

	<path id="test.class.path">
		<fileset dir="${lib.test.dir}" includes="**/*.jar" />
	</path>

	<path id="src.class.path">
		<fileset dir="${lib.src.dir}" includes="**/*.jar" />
	</path>

	<target name="clean">
		<delete includeemptydirs="true" verbose="true" failonerror="false">
			<fileset dir="${temp.dir}" />
			<fileset dir="${package.dir}" />
		</delete>
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${temp.dir}" />
		<mkdir dir="${temp.dir.classes}" />
		<mkdir dir="${temp.dir.tests.unit}" />
		<mkdir dir="${temp.dir.tests.unit.classes}" />
		<mkdir dir="${tests.report}" />
	</target>

	<target name="compile" depends="prepare">
		<javac debug="on" srcdir="${src.dir}" destdir="${temp.dir.classes}" includes="**/*">
			<classpath refid="src.class.path" />
		</javac>
	</target>
	
	<target name="compile-unit-tests" depends="compile">
		<javac debug="on" srcdir="${src.tests.unit.dir}" destdir="${temp.dir.tests.unit.classes}" includes="**/*">
			<classpath>
				<pathelement path="${temp.dir.classes}" />
			</classpath>
			<classpath refid="test.class.path" />
			<classpath refid="src.class.path" />
		</javac>
	</target>
	
	<target name="run-unit-tests" depends="compile-unit-tests">
		<junit tempdir="${temp.dir}" fork="yes" forkmode="once" printsummary="true" failureproperty="failed-test">
			<classpath>
				<pathelement path="${temp.dir.classes}" />
				<pathelement path="${temp.dir.tests.unit.classes}" />
			</classpath>
			<classpath refid="test.class.path" />
			<classpath refid="src.class.path" />
			
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			
			<batchtest fork="yes" todir="${tests.report}">
				<fileset dir="${temp.dir.tests.unit.classes}" includes="**/*Test.class" />
			</batchtest>
		</junit>
		<fail if="failed-test" message="FAILING TESTS" />
	</target>
	
	<target name="coverage">
		<taskdef classpathref="test.class.path" resource="tasks.properties" />
		<delete file="cobertura.ser" verbose="false" />
		<cobertura-instrument todir="${instrumentation.dir}">
			<fileset dir="${temp.dir.classes}" />
		</cobertura-instrument>
		<junit tempdir="${temp.dir}" fork="yes" forkmode="once" printsummary="true" failureproperty="failed-test">
			<sysproperty key="net.sourceforge.cobertura.datafile" file="cobertura.ser" />
			<classpath>
				<pathelement path="${instrumentation.dir}" />
				<pathelement path="${temp.dir.classes}" />
				<pathelement path="${temp.dir.tests.unit.classes}" />
			</classpath>
			<classpath refid="test.class.path" />
			<classpath refid="src.class.path" />
			
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			
			<batchtest fork="yes" todir="${tests.report}">
				<fileset dir="${temp.dir.tests.unit.classes}" includes="**/*Test.class" />
			</batchtest>
		</junit>
		<mkdir dir="${tests.report}/cobertura" />
		<mkdir dir="${tests.report}/junit" />
		<cobertura-report format="xml" destdir="${tests.report}/cobertura" srcdir="${src.dir}" />
		<junitreport todir="${tests.report}/">
			<fileset dir="${tests.report}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${tests.report}/junit" />
		</junitreport>
		<fail if="failed-test" message="FAILING TESTS" />
	</target>
	
	<target name="generate-jar" depends="run-unit-tests">
		<mkdir dir="${package.dir}" />
		<echo file="${temp.dir.classes}/VERSION">${package.name} version: ${version}</echo>
		<jar destfile="${package.file}-${version}.jar" 
			basedir="${temp.dir.classes}" 
			excludes="**/*Test.class">
			<fileset file="LICENSE" />
			<fileset file="VERSION" />
		</jar>
		<copy todir="${package.dir}/lib">
			<path refid="src.class.path"/>
		</copy>
	</target>

</project>
